version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: aigpsservice
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    environment:
      DB_HOST_AIGPSSERVICE: postgres
      DB_PORT_AIGPSSERVICE: 5432
      DB_USER_AIGPSSERVICE: postgres
      DB_PASSWORD_AIGPSSERVICE: postgres
      DB_NAME_AIGPSSERVICE: aigpsservice
      DB_SERVER_PORT_AIGPSSERVICE: 8080
      MINIO_ENDPOINT_AIGPSSERVICE: minio:9000
      MINIO_ACCESS_KEY_AIGPSSERVICE: minioadmin
      MINIO_SECRET_KEY_AIGPSSERVICE: minioadmin
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:

networks:
  app-network:
    driver: bridge